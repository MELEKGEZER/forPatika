import java.util.Random;
import java.util.Scanner;

public class MineSweeper {
    private int rows;
    private int columns;
    private int[][] board;
    private boolean[][] mines;
    private boolean gameOver;
    private int remainingCells;

    public MineSweeper(int rows, int columns) {
        this.rows = rows;
        this.columns = columns;
        this.board = new int[rows][columns];
        this.mines = new boolean[rows][columns];
        this.gameOver = false;
        this.remainingCells = rows * columns;
    }

    public void play() {
        System.out.println("Mayın Tarlası Oyuna Hoşgeldiniz!");

        initializeBoard();
        placeMines();

        while (!gameOver && remainingCells > 0) {
            printBoard();
            int row = getValidInput("Satır Giriniz: ");
            int column = getValidInput("Sütun Giriniz: ");
            revealCell(row, column);
        }

        if (gameOver) {
            System.out.println("Game Over!!");
        } else {
            System.out.println("Oyunu Kazandınız!");
        }

        printBoard();
    }

    private void initializeBoard() {
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                board[i][j] = -1; // Tüm hücreleri kapalı olarak işaretlemek için -1 kullanıyoruz.
            }
        }
    }

    private void placeMines() {
        Random random = new Random();
        int mineCount = rows * columns / 4; // Eleman sayısının çeyreği kadar mayın yerleştiriyoruz.

        while (mineCount > 0) {
            int row = random.nextInt(rows);
            int column = random.nextInt(columns);

            if (!mines[row][column]) {
                mines[row][column] = true;
                mineCount--;
            }
        }
    }

    private void printBoard() {
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                if (board[i][j] == -1) {
                    System.out.print("- ");
                } else {
                    System.out.print(board[i][j] + " ");
                }
            }
            System.out.println();
        }
        System.out.println("===========================");
    }

    private int getValidInput(String message) {
        Scanner scanner = new Scanner(System.in);
        int input;

        do {
            System.out.print(message);
            input = scanner.nextInt();
        } while (input < 0 || input >= rows);

        return input;
    }

    private void revealCell(int row, int column) {
        if (mines[row][column]) {
            gameOver = true;
            return;
        }

        if (board[row][column] != -1) {
            return;
        }

        int mineCount = countAdjacentMines(row, column);
        board[row][column] = mineCount;
        remainingCells--;

        if (mineCount == 0) {
            revealAdjacentCells(row, column);
        }
    }

    private int countAdjacentMines(int row, int column) {
        int mineCount = 0;

        for (int i = row - 1; i <= row + 1; i++) {
            for (int j = column - 1; j <= column + 1; j++) {
                if (isValidCell(i, j) && mines[i][j]) {
                    mineCount++;
                }
            }
        }

        return mineCount;
    }

    private void revealAdjacentCells(int row, int column) {
        for (int i = row - 1; i <= row + 1; i++) {
            for (int j = column - 1; j <= column + 1; j++) {
                if (isValidCell(i, j)) {
                    revealCell(i, j);
                }
            }
        }
    }

    private boolean isValidCell(int row, int column) {
        return row >= 0 && row < rows && column >= 0 && column < columns;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Satır Sayısını Giriniz: ");
        int rows = scanner.nextInt();

        System.out.print("Sütun Sayısını Giriniz: ");
        int columns = scanner.nextInt();

        MineSweeper game = new MineSweeper(rows, columns);
        game.play();

        scanner.close();
    }
}
